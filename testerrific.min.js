/*!
*	Testerrific
*	The absolute best, fastest, easiest way test your site
*	Copyright (c) 2021-Present Thom Hines
*	Licensed under MIT.
*	@author Thom Hines
*	https://github.com/thomhines/testerrific
*	@version 0.3.1
*/
let render_debounce;tt={collapse_skipped_groups:!0,visible:!0,current_group:-1,running_group:-1,current_test:0,running:0,paused:0,run_start:0,run_time:0,is_manual_test:0,skip_manual_tests:0,message:"",max_time:1e3,wait_for_element_timeout:2e3,wait_for_element_interval:100,display_test_index:0,group_defaults:{group:!0,test_count:0,collapse:!1,tests:[],skip:0,only:0,run_if:"",beforeEach:function(){},afterEach:function(){}},test_defaults:{running:0,time:null,result:null,skip:0,only:0,max_time:null,run_if:"",message:"",fn:null,before:function(){},after:function(){}},groups:[],group:function(t="Test Group",e={}){let n=Object.assign(ttb.clone(tt.group_defaults),e);n.id=ttb.id_count++,n.label=t,tt.groups.push(n)},duplicate_group:function(t,e,n={}){let s=ttb.find(tt.groups,{label:t}),r=ttb.clone(s);return r=Object.assign(r,n),r.label=e,tt.groups.push(r),tt.groups.length-1},test:function(t,e,n={}){"object"!=typeof e&&e||(n=e,e=t,t="");let s=Object.assign(ttb.clone(tt.test_defaults),n,{test:e});s.id=ttb.id_count++,!s.label&&t&&(s.label=t),s.label||"string"!=typeof e||(s.label=e),tt.groups.length<1&&tt.group();let r=tt.groups[tt.groups.length-1];"number"==typeof s.group?r=tt.groups[s.group]:s.group&&(r=ttb.find(tt.groups,{label:s.group})),r.skip&&(s.skip=1),s.position?r.tests.splice(s.position,0,s):r.tests.push(s)},run:function(t,e,n={}){"object"!=typeof e&&e||(n=e,e=t,t="");let s=Object.assign(ttb.clone(tt.test_defaults),n,{fn:e});s.id=ttb.id_count++,!s.label&&t&&(s.label=t);let r=tt.groups[tt.groups.length-1];"number"==typeof s.group?r=tt.groups[s.group]:s.group&&(r=ttb.find(tt.groups,{label:s.group})),r.skip&&(s.skip=1),s.position?r.tests.splice(s.position,0,s):r.tests.push(s)},wait:function(t){tt.run("Wait "+ttb.ms_to_s(t)+" sec",(function(){return new Promise((function(e,n){setTimeout(e,t)}))}))},pause:function(){tt.run("Pause",(function(){tt.alert("Tests paused.")}),{pause:1})},manual_test:function(t="",e="",n={}){"object"!=typeof e&&e||(n=e,e=t);let s=Object.assign(ttb.clone(tt.test_defaults),n,{label:t,test:"false",max_time:999999,message:e,is_manual_test:1});tt.test(t,s)},skip_non_only_tests:function(){let t=0;tt.groups.forEach((function(e){e.tests.forEach((function(n){(e.only||n.only)&&(t=1)}))})),tt.groups.forEach((function(e){let n=0,s=0;e.tests.forEach((function(r){e.skip?r.skip=1:(r.only&&(s=1),!t||e.only||r.only||(r.skip=1),tt.skip_manual_tests&&(e.is_manual_test||r.is_manual_test)?r.skip=1:s&&(n=1))})),t&&!e.only&&(e.skip=1),tt.skip_manual_tests&&e.is_manual_test&&(e.skip=1),n&&(e.skip=0)}))},start_tests:function(t=-1){ttb.force_render=1,tt.running_group=t,tt.running_group>=0?(tt.current_group=tt.running_group,tt.groups[tt.current_group].tests.forEach((function(t){t.time=null,t.result=null}))):(tt.current_group=0,tt.groups.forEach((function(t){t.tests.forEach((function(e){t.result=null,e.result=null}))}))),tt.current_test=0,tt.running=1,tt.run_start=new Date,tt.run_time=null,tt.paused=0,tt.current_test,clearTimeout(ttb.wait_for_element_interval_obj),tt.run_next_test()},pause_tests:function(){tt.paused=1},resume_tests:function(){tt.paused=0,tt.alert(""),tt.groups[tt.current_group].tests[tt.current_test].id=1*tt.groups[tt.current_group].tests[tt.current_test].id,tt.groups[tt.current_group].tests[tt.current_test].pause&&tt.current_test++,tt.run_next_test()},run_test:function(t,e){return new Promise((function(n,s){tt.current_group=t,tt.current_test=e;let r=tt.groups[tt.current_group],i=tt.groups[t].tests[e];i.result=null,i.time=null,i.is_manual_test?tt.is_manual_test=1:tt.is_manual_test=0,ttb.test_start=new Date,beforeEach_result=r.beforeEach(),Promise.resolve(beforeEach_result).then((function(t){before_result=i.before(),Promise.resolve(before_result).then((function(t){i.message&&tt.alert(i.message),tt.run_test_loop(tt.current_group,tt.current_test).then((function(){i.message&&tt.alert(""),after_result=i.after(),Promise.resolve(after_result).then((function(t){afterEach_result=r.afterEach(),Promise.resolve(afterEach_result).then((function(t){tt.running||(tt.current_group=-1,tt.current_test=-1),n(),i.time=new Date-ttb.test_start}))}))}))}))}))}))},run_test_loop:function(t,e,n=0){return new Promise((function(s,r){ttb.wait_for_element_interval_obj=setTimeout((function(){tt.groups[tt.current_group];let n=tt.groups[tt.current_group].tests[tt.current_test];if(tt.run_start&&(tt.run_time=(new Date).getTime()-tt.run_start.getTime()),n.wait_for_element){if(new Date-ttb.test_start>tt.wait_for_element_timeout)return n.result="error",n.error="element not found",void s();let r=document.querySelector(n.wait_for_element);if(!r||!r.offsetWidth||1*window.getComputedStyle(r).getPropertyValue("opacity")<1)return void tt.run_test_loop(t,e,tt.wait_for_element_interval).then((function(){tt.running||(tt.current_test=0),s()}))}if(n.fn)result=n.fn(),Promise.resolve(result).then((function(t){s()}));else{let r;if(n.result)return void s();try{if("function"==typeof n.test){let t=n.test();if(t instanceof Promise)return void Promise.resolve(t).then((function(t){n.result=t?"passed":"failed",s()}));r=t}else r=ttb.seval(n.test)}catch(t){r=!1}if(!r&&(null!==n.max_time||tt.max_time)){let r=n.max_time;return null===r&&(r=tt.max_time),void(new Date-ttb.test_start>=r?(n.result="failed",n.error="timed out",s()):tt.run_test_loop(t,e,tt.wait_for_element_interval).then((function(){tt.running||(tt.current_test=0),s()})))}n.result=r?"passed":"failed",tt.running||(tt.current_test=0),s()}}),n)}))},pass_test:function(t=tt.current_group,e=tt.current_test){tt.is_manual_test=0,tt.groups[t].tests[e].result="passed",tt.paused&&tt.current_test++},fail_test:function(t=tt.current_group,e=tt.current_test){tt.is_manual_test=0,tt.groups[t].tests[e].result="failed",tt.paused&&tt.current_test++},skip_test:function(t=tt.current_group,e=tt.current_test){tt.is_manual_test=0,tt.groups[t].tests[e].result="skipped",tt.paused&&tt.current_test++},run_next_test:function(){if(tt.paused)return;let t=tt.groups[tt.current_group];if(tt.current_group>=tt.groups.length||tt.running_group>=0&&tt.current_group!=tt.running_group)return void tt.finish_tests();let e=tt.groups[tt.current_group].tests[tt.current_test];return tt.current_test>=t.tests.length?(tt.current_group=tt.current_group+1,tt.current_test=0,void tt.run_next_test()):e.skip||e.run_if&&0==ttb.seval(e.run_if)?(e.result="skipped",tt.current_test=tt.current_test+1,void tt.run_next_test()):void tt.run_test(tt.current_group,tt.current_test).then((function(){tt.groups[tt.current_group].tests[tt.current_test].pause?tt.paused=1:(tt.current_test=tt.current_test+1,tt.run_next_test())}))},finish_tests:function(){ttb.force_render=1,tt.current_group=-1,tt.current_test=0,tt.run_start=0,tt.running=0,tt.alert("Tests Complete",3e3)},reset_tests:function(){ttb.force_render=1,tt.groups.forEach((function(t){t.tests.forEach((function(t){t.result=null,t.time=null}))})),tt.run_time=0},alert_timeout:null,alert:function(t,e=999999){tt.message=t,clearTimeout(tt.alert_timeout),tt.alert_timeout=setTimeout((function(){document.querySelector(".tests_message").classList.remove("visible"),setTimeout((function(){tt.message=""}),300)}),e)},toggle_tests_panel(){tt.visible=!tt.visible},enable_all_groups(){tt.groups.forEach((function(t){t.tests.forEach((function(e){t.skip=0,e.skip=0}))}))},disable_all_groups(){tt.groups.forEach((function(t){t.skip=1,t.tests.forEach((function(t){t.skip=1}))}))},collapse_all_groups(){tt.groups.forEach((function(t){t.collapse=1}))},expand_all_groups(){tt.groups.forEach((function(t){t.collapse=0}))},toggle_view_group(t){tt.groups[t].collapse=!tt.groups[t].collapse},toggle_skip_group(t){let e=!!tt.groups[t].skip;tt.groups[t].skip=!e,tt.groups[t].tests.forEach((function(t){t.skip=!e}))},toggle_skip_test(t,e){let n=!!tt.groups[t].tests[e].skip;tt.groups[t].tests[e].skip=!n,n&&(tt.groups[t].skip=0)},totals(t="all",e=-1){let n={all:0,run:0},s=tt.groups;return e>=0&&(s=[tt.groups[e]]),s.forEach((function(t){t.tests.forEach((function(t){t.test&&(n[t.result]||(n[t.result]=0),null==t.result||n[t.result]++,null!=t.result&&n.run++,n.all++)}))})),n[t]?n[t]:0}};let last_render=new Date;var ttb={id_count:1,changed_elements:{ui:0,groups:[],tests:[]},test_start:null,wait_for_element_interval_obj:null,init:function(t){this.elem=document.querySelector(t.selector);var e=new Proxy(t.data,ttb.handler(this));this.template=t.template,Object.defineProperty(this,"data",{get:function(){return e}})},debounceRender:function(t){t.debounce&&window.cancelAnimationFrame(t.debounce),t.debounce=window.requestAnimationFrame((function(){t.render(),ttb.changed_elements={ui:0,groups:[],tests:[]}}))},handler:function(t){return{get:function(e,n){return["[object Object]","[object Array]"].indexOf(Object.prototype.toString.call(e[n]))>-1?new Proxy(e[n],ttb.handler(t)):e[n]},set:function(e,n,s){if(e.tests)ttb.changed_elements.groups.push(e.id);else if(e.id&&"run_time"!=n){ttb.changed_elements.tests.push(e.id);let t=0;for(let n=0;n<tt.groups.length;n++)for(let s=0;s<tt.groups[n].tests.length;s++)tt.groups[n].tests[s].id==e.id&&(t=tt.groups[n].id);ttb.changed_elements.groups.push(t)}return e[n]=s,ttb.debounceRender(t),!0},deleteProperty:function(e,n){return delete e[n],ttb.debounceRender(t),!0}}},matchDOMNode:function(t,e){if(!ttb.force_render){if(t.hasAttribute("group_id")){let e=1*t.getAttribute("group_id");if(!ttb.changed_elements.groups.includes(e))return}if(t.hasAttribute("test_id")){let e=1*t.getAttribute("test_id");if(!ttb.changed_elements.tests.includes(e))return}}let n=t.children,s=e.children;if(s.length<1)return e.outerHTML=t.cloneNode(!0).outerHTML,void(s=t.cloneNode(!0).children);for(let t=0;t<n.length;t++){if(n[t].children.length!=s[t].children.length){s[t].outerHTML=n[t].outerHTML+"";continue}let e=n[t].cloneNode(!0);e.querySelectorAll("*").forEach((function(t){t.remove()})),"true"==e.getAttribute(":checked")&&(e.checked=!0),"true"==e.getAttribute(":disabled")&&(e.disabled=!0);for(let t=0;t<e.attributes.length;t++)e.removeAttribute(e.attributes[t].name);e.removeAttribute("class"),e.removeAttribute("style");let r=s[t].cloneNode(!0);r.querySelectorAll("*").forEach((function(t){t.remove()}));for(let t=0;t<r.attributes.length;t++)r.removeAttribute(r.attributes[t].name);if(r.removeAttribute("class"),r.removeAttribute("style"),e.outerHTML==r.outerHTML){for(let e=0;e<n[t].attributes.length;e++){let r=n[t].attributes[e];n[t].getAttribute(r.name)!=s[t].getAttribute(r.name)&&s[t].setAttribute(r.name,n[t].getAttribute(r.name))}n[t].children.length>0&&ttb.matchDOMNode(n[t],s[t])}else{let r=n[t].cloneNode(!0);s[t].outerHTML=r.outerHTML,e.checked&&s[t].setAttribute("checked","checked"),e.disabled&&s[t].setAttribute("disabled","disabled")}}},find(t,e){for(var n=-1,s=0;s<t.length&&!(n>=0);s++){let r=1;for(prop in e)t[s][prop]!=e[prop]&&(r=0);r&&(n=s)}return t[n]},clone(t){let e=JSON.parse(JSON.stringify(t));for(let n in t)n in e==0&&"function"==typeof t[n]&&(e[n]=t[n].bind({}));return e},print_if(t){let e="";for(let n in t)try{ttb.seval(t[n])&&(e+=n+" ")}catch(t){console.log("print_if error",e,check)}return e.trim()},seval(str){try{return eval(str)}catch(t){}},ms_to_s:t=>(t/1e3).toFixed(1)};ttb.init.prototype.render=function(){let t=document.createElement("div");t.innerHTML=this.template(this.data),t.id="testerrific";let e=t.querySelectorAll("[\\:if]");for(let t=0;t<e.length;t++){let n=e[t].getAttribute(":if");"null"==n||"false"==n||"undefined"==n||"0"==n?e[t].remove():"true"==n||ttb.seval(e[t].getAttribute(":if"))||e[t].remove(),e[t].removeAttribute(":if")}["checked","disabled"].forEach((function(n){e=t.querySelectorAll("[\\:"+n+"]");for(let t=0;t<e.length;t++){let s=ttb.seval(e[t].getAttribute(":"+n));s?e[t].setAttribute(n,s):e[t].removeAttribute(n)}})),ttb.matchDOMNode(t,document.querySelector("#testerrific")),ttb.force_render=0};var testerrific_ui=new ttb.init({selector:"#testerrific",data:tt,template:function(t){return`\n\t\t\n\t\t\t<div class="tests_container">\n\t\t\t\n\t\t\t<div class="tests_panel ${ttb.print_if({visible:t.visible})}">\n\t\t\t\t\n\t\t\t\t<div class="tests_message ${ttb.print_if({visible:t.message.length})}">\n\t\t\t\t\t<span>${t.message}</span>\n\t\t\t\t\t<div class="pass_fail_buttonss" :if="tt.is_manual_test">\n\t\t\t\t\t\t<button class="pass" onclick="tt.pass_test()">Pass</button>\n\t\t\t\t\t\t<button class="fail" onclick="tt.fail_test()">Fail</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<button :if="tt.running && tt.paused" onclick="tt.resume_tests()"><svg width="57" height="64" viewBox="0 0 57 64" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M53.4192 26.3701C57.4192 28.6795 57.4192 34.453 53.4192 36.7624L9.37388 62.1919C5.37388 64.5013 0.373887 61.6146 0.373887 56.9958L0.37389 6.13663C0.37389 1.51783 5.37389 -1.36892 9.37389 0.940483L53.4192 26.3701Z" fill="white"/></svg> Resume</button>\n\t\t\t\t\t<button class="close" onclick="tt.alert(tt.message, 0)">close</button>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t<div class="panel_inner_container">\n\t\t\t\t\t<div class="run_buttons_container">\n\t\t\t\t\t\t<div class="title"><h2><span>TESTERRIFIC</span></h2></div>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<div :if="!tt.running">\n\t\t\t\t\t\t\t<button class="run_all_button" onclick="tt.start_tests()"><svg width="57" height="64" viewBox="0 0 57 64"><path d="M53.4192 26.3701C57.4192 28.6795 57.4192 34.453 53.4192 36.7624L9.37388 62.1919C5.37388 64.5013 0.373887 61.6146 0.373887 56.9958L0.37389 6.13663C0.37389 1.51783 5.37389 -1.36892 9.37389 0.940483L53.4192 26.3701Z" fill="black"/></svg> Run selected tests</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class="run_buttons" :if="tt.running">\n\t\t\t\t\t\t\t<button :if="!tt.paused" onclick="tt.pause_tests()"><svg width="50" height="57" viewBox="0 0 50 57"><rect y="0.241699" width="20.339" height="55.7721" rx="5" fill="black"/><rect x="29.661" y="0.241699" width="20.339" height="55.7721" rx="5" fill="black"/></svg> Pause</button>\t\n\t\t\t\t\t\t\t<button :if="tt.paused" onclick="tt.resume_tests()"><svg width="57" height="64" viewBox="0 0 57 64"><path d="M53.4192 26.3701C57.4192 28.6795 57.4192 34.453 53.4192 36.7624L9.37388 62.1919C5.37388 64.5013 0.373887 61.6146 0.373887 56.9958L0.37389 6.13663C0.37389 1.51783 5.37389 -1.36892 9.37389 0.940483L53.4192 26.3701Z" fill="black"/></svg> Resume</button>\n\t\t\t\t\t\t\t<button onclick="tt.skip_test()"><svg width="62" height="53" viewBox="0 0 62 53"><path fill-rule="evenodd" clip-rule="evenodd" d="M26.5319 36.1232L6.005 51.6C3.50226 53.4871 0.37384 51.1283 0.37384 47.3543V5.79715C0.37384 2.02322 3.50226 -0.335662 6.005 1.5513L26.5319 17.0281V5.79715C26.5319 2.02322 29.6603 -0.335662 32.163 1.5513L59.7215 22.3299C62.2242 24.2169 62.2242 28.9345 59.7215 30.8214L32.163 51.6C29.6603 53.4871 26.5319 51.1283 26.5319 47.3543V36.1232Z" fill="black"/></svg> Skip</button>\n\t\t\t\t\t\t\t<button onclick="tt.finish_tests()"><svg width="54" height="56" viewBox="0 0 54 56" fill="none" xmlns="http://www.w3.org/2000/svg"><rect width="54" height="56" rx="10" fill="black"/></svg> Stop</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t\t<br>\n\t\t\t\t\t\n\t\t\t\t\t<div class="tests_summary">\n\t\t\t\t\t\t<button class="clear_results" onclick="tt.reset_tests()">Clear</button>\n\t\t\t\t\t\t<h3>Summary:</h3>\n\t\t\t\t\t\t<div class="tests_summary_table">\n\t\t\t\t\t\t\t<div><b class="run">${t.totals("run")}</b></div><div> tests run</div>\n\t\t\t\t\t\t\t<div :if="tt.totals('passed')"><b class="passed">${t.totals("passed")}</b></div><div :if="tt.totals('passed')"> passed</div>\n\t\t\t\t\t\t\t<div :if="tt.totals('failed')"><b class="failed">${t.totals("failed")}</b></div><div :if="tt.totals('failed')"> failed</div>\n\t\t\t\t\t\t\t<div :if="tt.totals('skipped')"><b class="skipped">${t.totals("skipped")}</b></div><div :if="tt.totals('skipped')"> skipped</div>\n\t\t\t\t\t\t\t<div :if="tt.totals('error')"><b class="error">${t.totals("error")}</b></div><div :if="tt.totals('error')"> errors</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t\t\t<br>\n\t\t\t\t\n\t\t\t\t\t\t<div :if="tt.run_time">Total time: <b>${ttb.ms_to_s(t.run_time)}</b> sec</div>\n\t\t\t\t\t\t<div :if="!tt.run_time && tt.paused">Paused...</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t\t<div class="tests_table">\n\t\t\t\t\t\t<div class="table_controls" :if="tt.groups.length">\n\t\t\t\t\t\t\t<a onclick="tt.enable_all_groups()">enable all</a>\n\t\t\t\t\t\t\t<a onclick="tt.disable_all_groups()">disable all</a>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t<a onclick="tt.expand_all_groups()">expand all</a>\n\t\t\t\t\t\t\t<a onclick="tt.collapse_all_groups()">collapse all</a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\n\t\t\t\t\t\t${t.groups.map((function(e,n){return`\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div class="group ${ttb.print_if({collapse:e.collapse,skipped:e.skip,running:n==t.current_group})}" group_index="${n}" group_id="${e.id}">\n\t\t\t\t\t\t\t\t<div class="group_title">\n\t\t\t\t\t\t\t\t\t<input type="checkbox" :checked="${!e.skip}" onchange="tt.toggle_skip_group(${n})" index="${n}">\n\t\t\t\t\t\t\t\t\t<p onclick="tt.toggle_view_group(${n})">${e.label}</p>\n\t\t\t\t\t\t\t\t\t<span class="collapse_group" onclick="tt.toggle_view_group(${n})"></span>\n\t\t\t\t\t\t\t\t\t<div class="group_test_summary" :if="${n} != tt.current_group && tt.totals('run', ${n})">\n\t\t\t\t\t\t\t\t\t\t<b class="passed">${t.totals("passed",n)}</b>\n\t\t\t\t\t\t\t\t\t\t<b class="failed">${t.totals("failed",n)}</b>\n\t\t\t\t\t\t\t\t\t\t<b class="skipped" :if="tt.totals('skipped', ${n})">${t.totals("skipped",n)}</b>\n\t\t\t\t\t\t\t\t\t\t<b class="error" :if="tt.totals('error', ${n})">${t.totals("error",n)}</b>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class="running_indicator" :if="${n} == tt.current_group"></div>\n\t\t\t\t\t\t\t\t\t<button onclick="tt.start_tests(${n})" :disabled="${1==t.running}">Run</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t${e.tests.map((function(s,r){return`\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<div class="test ${ttb.print_if({fn:s.fn,running:n==t.current_group&&r==t.current_test,skipped:s.skip,pause:s.pause,hidden:e.collapse})}" test_index="${r}" test_id="${s.id}" key="${r}">\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t<div :if="${"string"==typeof s.label}">\n\t\t\t\t\t\t\t\t\t\t\t<i :if="${t.display_test_index}">${r}</i> \n\t\t\t\t\t\t\t\t\t\t\t<input type="checkbox" :checked="${!s.skip}" onchange="tt.toggle_skip_test(${n}, ${r})" test_index="${r}">\n\t\t\t\t\t\t\t\t\t\t\t<p><b :if="${s.fn}">Run:</b> ${s.label}</p>\n\t\t\t\t\t\t\t\t\t\t\t<div class="running_indicator" :if="${n} == tt.current_group && ${r} == tt.current_test"></div>\n\t\t\t\t\t\t\t\t\t\t\t<div :if="${null!=s.result}" class="result_container">\n\t\t\t\t\t\t\t\t\t\t\t\t<div class="result ${s.result}">${s.result}</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class="time" :if="${"skipped"!=s.result&&null!==s.time}">${s.time}ms</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<button onclick="tt.run_test(${n}, ${r}).then(tt.finish_tests)" :if="${!s.pause}" :disabled="${1==t.running}">Run</button>\n\t\t\t\t\t\t\t\t\t\t\t<button onclick="tt.resume_tests()" :if="${s.pause&&t.paused}">Resume</button>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t`})).join(" ")}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t`})).join(" ")}\n\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t\t<b>${t.totals()+" Total Tests"}</b>\n\t\t\t\t\t\n\t\t\t\t\t<footer>\n\t\t\t\t\t\t<p>Testerrific v0.3.1</p>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<a href="https://projects.thomhines.com/testerrific/" target="_blank">Documentation</a>\n\t\t\t\t\t\t\t<a href="https://github.com/thomhines/testerrific" target="_blank">Github</a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</footer>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t\n\t\t\t\n\t\t\t<button class="toggle_tests_panel ${ttb.print_if({visible:t.visible})}" onclick="tt.toggle_tests_panel()">TESTS</button>\n\t\t\t\n\t\t\t</div>\n\t\t\t\n\t`}});document.addEventListener("DOMContentLoaded",(function(){let t=document.createElement("div");t.id="testerrific",document.body.appendChild(t),testerrific_ui.render(),tt=testerrific_ui.data,tt.skip_non_only_tests()}),!1);
//# sourceMappingURL=testerrific.min.js.map