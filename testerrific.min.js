/*!
*	Testerrific
*	The absolute best, fastest, easiest way test your site
*	Copyright (c) 2021-Present Thom Hines
*	Licensed under MIT.
*	@author Thom Hines
*	https://github.com/thomhines/testerrific
*	@version 1.0
*/
let render_debounce;tt={collapse_skipped_groups:!0,visible:!0,current_group:-1,running_group:-1,current_test:0,running:0,paused:0,run_time:0,is_manual_test:0,skip_manual_tests:0,message:"",max_time:1e3,test_interval:100,wait_for_timeout:5e3,wait_for_interval:100,display_test_index:0,group_defaults:{group:!0,test_count:0,collapse:!1,tests:[],skip:0,solo:0,run_if:"",beforeEach:()=>{},afterEach:()=>{}},test_defaults:{running:0,time:null,result:null,skip:0,solo:0,max_time:null,run_if:"",message:"",fn:null,before:()=>{},after:()=>{}},groups:[],group:(t="Test Group",e={})=>{let s=Object.assign(ttb.clone(tt.group_defaults),e);s.id=ttb.id_count++,s.label=t,tt.groups.push(s)},duplicate_group:(t,e,s={})=>{let r=ttb.find(tt.groups,{label:t}),n=ttb.clone(r);return n=Object.assign(n,s),n.label=e,tt.groups.push(n),tt.groups.length-1},test:(t,e,s={})=>{"object"!=typeof e&&e||(s=e,e=t,t=""),s&&void 0!==s.test&&(e=s.test);let r=Object.assign(ttb.clone(tt.test_defaults),s,{test:e});r.id=ttb.id_count++,!r.label&&t&&(r.label=t),r.label||"string"!=typeof e||(r.label=e),tt.groups.length<1&&tt.group();let n=tt.groups[tt.groups.length-1];"number"==typeof r.group?n=tt.groups[r.group]:r.group&&(n=ttb.find(tt.groups,{label:r.group})),n.skip&&(r.skip=1),r.position?n.tests.splice(r.position,0,r):n.tests.push(r)},run:(t,e,s={})=>{"object"!=typeof e&&e||(s=e,e=t,t="");let r=Object.assign(ttb.clone(tt.test_defaults),s,{fn:e});r.id=ttb.id_count++,!r.label&&t&&(r.label=t),tt.groups.length<1&&tt.group();let n=tt.groups[tt.groups.length-1];"number"==typeof r.group?n=tt.groups[r.group]:r.group&&(n=ttb.find(tt.groups,{label:r.group})),n.skip&&(r.skip=1),r.position?n.tests.splice(r.position,0,r):n.tests.push(r)},wait:t=>{tt.run("Wait "+ttb.ms_to_s(t)+" sec",(()=>new Promise(((e,s)=>{setTimeout(e,t)}))),{wait:1})},pause:()=>{tt.run("Pause",(()=>{tt.alert("Tests paused.",5e3)}),{pause:1})},manual_test:(t="",e="",s={})=>{"object"!=typeof e&&e||(s=e,e=t);let r=Object.assign(ttb.clone(tt.test_defaults),s,{label:t,test:!1,max_time:999999,message:e,is_manual_test:1});tt.test(t,r)},skip_non_solo_tests:()=>{let t=0;tt.groups.forEach((e=>{e.tests.forEach((s=>{(e.solo||s.solo)&&(t=1)}))})),tt.groups.forEach((e=>{let s=0,r=0;e.tests.forEach((n=>{e.skip?n.skip=1:(n.solo&&(r=1),!t||e.solo||n.solo||(n.skip=1),tt.skip_manual_tests&&(e.is_manual_test||n.is_manual_test)?n.skip=1:r&&(s=1))})),t&&!e.solo&&(e.skip=1),tt.skip_manual_tests&&e.is_manual_test&&(e.skip=1),s&&(e.skip=0)}))},start_tests:(t=-1)=>{ttb.force_render=1,tt.running_group=t,tt.running_group>=0?(tt.current_group=tt.running_group,tt.groups[tt.current_group].tests.forEach((t=>{t.time=null,t.result=null}))):(tt.current_group=0,tt.groups.forEach((t=>{t.tests.forEach((e=>{t.result=null,e.result=null}))}))),tt.current_test=0,tt.running=1,ttb.start_tests_start=new Date,tt.run_time=null,tt.paused=0,tt.current_test,tt.run_next_test()},pause_tests:()=>{tt.paused=1},resume_tests:()=>{tt.paused=0,tt.alert(""),tt.groups[tt.current_group].tests[tt.current_test].id=1*tt.groups[tt.current_group].tests[tt.current_test].id,tt.groups[tt.current_group].tests[tt.current_test].pause&&tt.current_test++,tt.run_next_test()},insert_pause:(t,e)=>{tt.run("Pause",(()=>{tt.alert("Tests paused.",5e3)}),{pause:1,group:t,position:e})},run_test:(t,e)=>new Promise(((s,r)=>{tt.current_group=t,tt.current_test=e,ttb.start_tests_start||(ttb.start_tests_start=new Date);let n=tt.groups[tt.current_group],i=tt.groups[t].tests[e];i.result=null,i.time=null,i.is_manual_test?tt.is_manual_test=1:tt.is_manual_test=0,ttb.test_start=new Date,function t(){if(i.wait_for&&0==ttb.seval(i.wait_for))return new Date-ttb.test_start>tt.wait_for_timeout?(i.result="error",i.error="element not found",void s()):void setTimeout((()=>{t()}),tt.wait_for_interval);n.beforeEach||(n.beforeEach=()=>{}),i.before||(i.before=()=>{}),i.after||(i.after=()=>{}),n.afterEach||(n.afterEach=()=>{});let e=n.beforeEach();Promise.resolve(e).then((t=>{let e=i.before();Promise.resolve(e).then((t=>{i.message&&tt.alert(i.message),tt.run_test_loop(tt.current_group,tt.current_test).then((()=>{i.message&&tt.alert("");let t=i.after();Promise.resolve(t).then((t=>{let e=n.afterEach();Promise.resolve(e).then((t=>{tt.running||(tt.current_group=-1,tt.current_test=-1),s(),i.time=new Date-ttb.test_start}))}))}))}))}))}()})),run_test_loop:(t,e,s=1)=>new Promise(((r,n)=>{tt.groups[tt.current_group];let i=tt.groups[tt.current_group].tests[tt.current_test];if(s&&(ttb.run_test_loop_start=new Date),ttb.start_tests_start&&(tt.run_time=(new Date).getTime()-ttb.start_tests_start.getTime()),i.fn)result=i.fn(),Promise.resolve(result).then((t=>{r()}));else{let s;if(i.result)return void r();try{if("function"==typeof i.test){let t=i.test();if(t instanceof Promise){Promise.resolve(t).then((t=>{i.result||(i.result=t?"passed":"failed",r())}));let e=i.max_time;return e||(e=tt.max_time),void setTimeout((()=>{i.result||(i.result="failed",r())}),e)}s=t}else s=ttb.seval(i.test)}catch(t){s=!1}if(!s&&(null!==i.max_time||tt.max_time)){let s=i.max_time;return null===s&&(s=tt.max_time),void(new Date-ttb.run_test_loop_start>=s?(i.result="failed",i.error="timed out",r()):setTimeout((()=>{tt.run_test_loop(t,e,0).then((()=>{tt.running||(tt.current_test=0),r()}))}),tt.test_interval))}i.result=s?"passed":"failed",tt.running||(tt.current_test=0),r()}})),pass_test:(t=tt.current_group,e=tt.current_test)=>{tt.is_manual_test=0,tt.groups[t].tests[e].result="passed",tt.paused&&tt.current_test++},fail_test:(t=tt.current_group,e=tt.current_test)=>{tt.is_manual_test=0,tt.groups[t].tests[e].result="failed",tt.paused&&tt.current_test++},skip_test:(t=tt.current_group,e=tt.current_test)=>{tt.is_manual_test=0,tt.groups[t].tests[e].result="skipped",tt.paused&&tt.current_test++},run_next_test:()=>{if(tt.paused)return;let t=tt.groups[tt.current_group];if(tt.current_group>=tt.groups.length||tt.running_group>=0&&tt.current_group!=tt.running_group)return void tt.finish_tests();let e=tt.groups[tt.current_group].tests[tt.current_test];return tt.current_test>=t.tests.length?(tt.current_group=tt.current_group+1,tt.current_test=0,void tt.run_next_test()):e.skip||e.run_if&&0==ttb.seval(e.run_if)?(e.result="skipped",tt.current_test=tt.current_test+1,void tt.run_next_test()):void tt.run_test(tt.current_group,tt.current_test).then((()=>{tt.groups[tt.current_group].tests[tt.current_test].pause?tt.paused=1:(tt.current_test=tt.current_test+1,tt.run_next_test())}))},finish_tests:()=>{ttb.force_render=1,tt.current_group=-1,tt.current_test=0,ttb.start_tests_start=0,tt.running=0,tt.alert("Tests Complete",3e3)},reset_tests:()=>{ttb.force_render=1,tt.groups.forEach((t=>{t.tests.forEach((t=>{t.result=null,t.time=null}))})),tt.run_time=0},alert_timeout:null,alert:(t,e=999999)=>{tt.message=t,clearTimeout(tt.alert_timeout),tt.alert_timeout=setTimeout((()=>{document.querySelector(".tt_message").classList.remove("visible"),setTimeout((()=>{tt.message=""}),300)}),e)},toggle_tests_panel(){tt.visible=!tt.visible},enable_all_groups(){tt.groups.forEach((t=>{t.tests.forEach((e=>{t.skip=0,e.skip=0}))}))},disable_all_groups(){tt.groups.forEach((t=>{t.skip=1,t.tests.forEach((t=>{t.skip=1}))}))},collapse_all_groups(){tt.groups.forEach((t=>{t.collapse=1}))},expand_all_groups(){tt.groups.forEach((t=>{t.collapse=0}))},toggle_view_group(t){tt.groups[t].collapse=!tt.groups[t].collapse},toggle_skip_group(t){let e=!!tt.groups[t].skip;tt.groups[t].skip=!e,tt.groups[t].tests.forEach((t=>{t.skip=!e}))},toggle_skip_test(t,e){let s=!!tt.groups[t].tests[e].skip;tt.groups[t].tests[e].skip=!s,s&&(tt.groups[t].skip=0)},totals(t="all",e=-1){let s={all:0,run:0},r=tt.groups;return e>=0&&(r=[tt.groups[e]]),r.forEach((t=>{t.tests.forEach((t=>{(t.test||t.is_manual_test)&&(s[t.result]||(s[t.result]=0),null==t.result||s[t.result]++,null!=t.result&&s.run++,s.all++)}))})),s[t]?s[t]:0}};let last_render=new Date;var ttb={id_count:1,changed_elements:{ui:0,groups:[],tests:[]},start_tests_start:0,test_start:null,run_test_loop_start:0,previus_tt_obj:[],init:function(t){this.elem=document.querySelector(t.selector);var e=new Proxy(t.data,ttb.handler(this));this.template=t.template,Object.defineProperty(this,"data",{get:function(){return e}})},debounceRender:function(t){t.debounce&&window.cancelAnimationFrame(t.debounce),t.debounce=window.requestAnimationFrame((function(){t.render(),ttb.changed_elements={ui:0,groups:[],tests:[]}}))},handler:function(t){return{get:function(e,s){return["[object Object]","[object Array]"].indexOf(Object.prototype.toString.call(e[s]))>-1?new Proxy(e[s],ttb.handler(t)):e[s]},set:function(e,s,r){if(e.tests)ttb.changed_elements.groups.push(e.id);else if(e.id&&"run_time"!=s){ttb.changed_elements.tests.push(e.id);let t=0;for(let s=0;s<tt.groups.length;s++)for(let r=0;r<tt.groups[s].tests.length;r++)tt.groups[s].tests[r].id==e.id&&(t=tt.groups[s].id);ttb.changed_elements.groups.push(t)}return e[s]=r,ttb.debounceRender(t),!0},deleteProperty:function(e,s){return delete e[s],ttb.debounceRender(t),!0}}},matchDOMNode:(t,e)=>{if(!ttb.force_render){if(t.hasAttribute("group_id")){let e=1*t.getAttribute("group_id");if(!ttb.changed_elements.groups.includes(e))return}if(t.hasAttribute("test_id")){let e=1*t.getAttribute("test_id");if(!ttb.changed_elements.tests.includes(e))return}}let s=t.children,r=e.children;if(r.length<1)return e.outerHTML=t.cloneNode(!0).outerHTML,void(r=t.cloneNode(!0).children);for(let t=0;t<s.length;t++){if(s[t].children.length!=r[t].children.length){r[t].outerHTML=s[t].outerHTML+"";continue}let e=s[t].cloneNode(!0);e.querySelectorAll("*").forEach((t=>{t.remove()})),"true"==e.getAttribute(":checked")&&(e.checked=!0),"true"==e.getAttribute(":disabled")&&(e.disabled=!0);for(let t=0;t<e.attributes.length;t++)e.removeAttribute(e.attributes[t].name);e.removeAttribute("class"),e.removeAttribute("style");let n=r[t].cloneNode(!0);n.querySelectorAll("*").forEach((t=>{t.remove()}));for(let t=0;t<n.attributes.length;t++)n.removeAttribute(n.attributes[t].name);if(n.removeAttribute("class"),n.removeAttribute("style"),e.outerHTML==n.outerHTML){for(let e=0;e<s[t].attributes.length;e++){let n=s[t].attributes[e];s[t].getAttribute(n.name)!=r[t].getAttribute(n.name)&&r[t].setAttribute(n.name,s[t].getAttribute(n.name))}s[t].children.length>0&&ttb.matchDOMNode(s[t],r[t])}else{let n=s[t].cloneNode(!0);r[t].outerHTML=n.outerHTML,e.checked&&r[t].setAttribute("checked","checked"),e.disabled&&r[t].setAttribute("disabled","disabled")}}},tt_obj_diff(t){t=(t=JSON.stringify(t)).replaceAll(/time":[\d]+/g,'time":0');let e=JSON.stringify(tt);return e=e.replaceAll(/time":[\d]+/g,'time":0'),t!=e},find(t,e){for(var s=-1,r=0;r<t.length&&!(s>=0);r++){let n=1;for(prop in e)t[r][prop]!=e[prop]&&(n=0);n&&(s=r)}return t[s]},clone(t){let e=JSON.parse(JSON.stringify(t));for(let s in t)s in e==0&&"function"==typeof t[s]&&(e[s]=t[s].bind({}));return e},print_if(t){let e="";for(let s in t)ttb.seval(t[s])&&(e+=s+" ");return e.trim()},seval(str){try{return eval(str)}catch(t){console.log("Test eval() error (group "+(tt.current_group+1)+", test "+(tt.current_test+1)+"): ",str)}},ms_to_s:t=>(t/1e3).toFixed(1)};ttb.init.prototype.render=function(){if(!ttb.tt_obj_diff(ttb.previus_tt_obj))return void(tt.run_time&&(document.querySelector(".run_time").innerHTML=ttb.ms_to_s(tt.run_time)));ttb.previus_tt_obj=JSON.parse(JSON.stringify(tt));let t=document.createElement("div");t.innerHTML=this.template(this.data),t.id="testerrific";let e=t.querySelectorAll("[\\:if]");for(let t=0;t<e.length;t++){let s=e[t].getAttribute(":if");"null"!=s&&"false"!=s&&"undefined"!=s&&"0"!=s||e[t].remove(),e[t].removeAttribute(":if")}["checked","disabled"].forEach((s=>{e=t.querySelectorAll("[\\:"+s+"]");for(let t=0;t<e.length;t++){let r=ttb.seval(e[t].getAttribute(":"+s));r?e[t].setAttribute(s,r):e[t].removeAttribute(s)}})),ttb.matchDOMNode(t,document.querySelector("#testerrific")),ttb.force_render=0};var testerrific_ui=new ttb.init({selector:"#testerrific",data:tt,template:function(t){return`\n\t\t\n\t\t\t<div class="tt_container">\n\t\t\t\n\t\t\t<div class="tt_panel ${ttb.print_if({visible:t.visible})}">\n\t\t\t\t\n\t\t\t\t<div class="tt_message ${ttb.print_if({visible:t.message.length})}">\n\t\t\t\t\t<span>${t.message}</span>\n\t\t\t\t\t<div class="pass_fail_buttons" :if="${t.is_manual_test&&t.running}">\n\t\t\t\t\t\t<button class="pass" onclick="tt.pass_test()">Pass</button>\n\t\t\t\t\t\t<button class="fail" onclick="tt.fail_test()">Fail</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<button class="close" onclick="tt.alert(tt.message, 0)">close</button>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t<div class="panel_inner_container">\n\t\t\t\t\t<div class="run_buttons_container">\n\t\t\t\t\t\t<div class="title"><h2>TESTERRIFIC</h2></div>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<div :if="${!t.running}">\n\t\t\t\t\t\t\t<button class="run_all_button attention" onclick="tt.start_tests()"><svg width="57" height="64" viewBox="0 0 57 64"><path d="M53.4192 26.3701C57.4192 28.6795 57.4192 34.453 53.4192 36.7624L9.37388 62.1919C5.37388 64.5013 0.373887 61.6146 0.373887 56.9958L0.37389 6.13663C0.37389 1.51783 5.37389 -1.36892 9.37389 0.940483L53.4192 26.3701Z" fill="black"/></svg> Run selected tests</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class="run_buttons" :if="${t.running}">\n\t\t\t\t\t\t\t<button :if="${!t.paused}" onclick="tt.pause_tests()"><svg width="50" height="57" viewBox="0 0 50 57"><rect y="0.241699" width="20.339" height="55.7721" rx="5" fill="black"/><rect x="29.661" y="0.241699" width="20.339" height="55.7721" rx="5" fill="black"/></svg> Pause</button>\t\n\t\t\t\t\t\t\t<button class="attention" :if="${t.paused}" onclick="tt.resume_tests()"><svg width="57" height="64" viewBox="0 0 57 64"><path d="M53.4192 26.3701C57.4192 28.6795 57.4192 34.453 53.4192 36.7624L9.37388 62.1919C5.37388 64.5013 0.373887 61.6146 0.373887 56.9958L0.37389 6.13663C0.37389 1.51783 5.37389 -1.36892 9.37389 0.940483L53.4192 26.3701Z" fill="black"/></svg> Resume</button>\n\t\t\t\t\t\t\t<button onclick="tt.skip_test()"><svg width="62" height="53" viewBox="0 0 62 53"><path fill-rule="evenodd" clip-rule="evenodd" d="M26.5319 36.1232L6.005 51.6C3.50226 53.4871 0.37384 51.1283 0.37384 47.3543V5.79715C0.37384 2.02322 3.50226 -0.335662 6.005 1.5513L26.5319 17.0281V5.79715C26.5319 2.02322 29.6603 -0.335662 32.163 1.5513L59.7215 22.3299C62.2242 24.2169 62.2242 28.9345 59.7215 30.8214L32.163 51.6C29.6603 53.4871 26.5319 51.1283 26.5319 47.3543V36.1232Z" fill="black"/></svg> Skip</button>\n\t\t\t\t\t\t\t<button onclick="tt.finish_tests()"><svg width="54" height="56" viewBox="0 0 54 56" fill="none" xmlns="http://www.w3.org/2000/svg"><rect width="54" height="56" rx="10" fill="black"/></svg> Stop</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t\t<br>\n\t\t\t\t\t\n\t\t\t\t\t<div class="tt_summary">\n\t\t\t\t\t\t<button class="clear_results" onclick="tt.reset_tests()" :if="${t.totals("run")}">Clear</button>\n\t\t\t\t\t\t<h3>Summary:</h3>\n\t\t\t\t\t\t<div class="tt_summary_table">\n\t\t\t\t\t\t\t<div><b>${t.totals()}</b></div><div>total tests</div>\n\t\t\t\t\t\t\t<div><b class="run">${t.totals("run")}</b></div><div> tests run</div>\n\t\t\t\t\t\t\t<div :if="${t.totals("passed")}"><b class="passed">${t.totals("passed")}</b></div><div :if="${t.totals("passed")}"> passed</div>\n\t\t\t\t\t\t\t<div :if="${t.totals("failed")}"><b class="failed">${t.totals("failed")}</b></div><div :if="${t.totals("failed")}"> failed</div>\n\t\t\t\t\t\t\t<div :if="${t.totals("skipped")}"><b class="skipped">${t.totals("skipped")}</b></div><div :if="${t.totals("skipped")}"> skipped</div>\n\t\t\t\t\t\t\t<div :if="${t.totals("error")}"><b class="error">${t.totals("error")}</b></div><div :if="${t.totals("error")}"> errors</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<br>\n\t\t\t\t\t\t<div :if="${t.run_time}">Total time: <b class="run_time">${ttb.ms_to_s(t.run_time)}</b> sec</div>\n\t\t\t\t\t\t<div :if="${!t.run_time&&t.paused}">Paused...</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div class="tt_table_controls" :if="${t.groups.length}">\n\t\t\t\t\t\t\t<a onclick="tt.enable_all_groups()">enable all</a>\n\t\t\t\t\t\t\t<a onclick="tt.disable_all_groups()">disable all</a>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t<a onclick="tt.expand_all_groups()">expand all</a>\n\t\t\t\t\t\t\t<a onclick="tt.collapse_all_groups()">collapse all</a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\n\t\t\t\t\t\t${t.groups.map(((e,s)=>`\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div class="tt_group ${ttb.print_if({collapse:e.collapse,skipped:e.skip,running:s==t.current_group})}" group_index="${s}" group_id="${e.id}">\n\t\t\t\t\t\t\t\t<div class="group_title">\n\t\t\t\t\t\t\t\t\t<input type="checkbox" :checked="${!e.skip}" onchange="tt.toggle_skip_group(${s})" index="${s}" aria-label="Toggle whether to skip test">\n\t\t\t\t\t\t\t\t\t<p onclick="tt.toggle_view_group(${s})">${e.label}</p>\n\t\t\t\t\t\t\t\t\t<span class="collapse_group" onclick="tt.toggle_view_group(${s})"></span>\n\t\t\t\t\t\t\t\t\t<div class="running_indicator" :if="${s==t.current_group}"></div>\n\t\t\t\t\t\t\t\t\t<div class="group_test_summary" :if="${s==t.current_group||t.totals("run",s)}">\n\t\t\t\t\t\t\t\t\t\t<b class="passed">${t.totals("passed",s)}</b>\n\t\t\t\t\t\t\t\t\t\t<b class="failed">${t.totals("failed",s)}</b>\n\t\t\t\t\t\t\t\t\t\t<b class="skipped" :if="${t.totals("skipped",s)}">${t.totals("skipped",s)}</b>\n\t\t\t\t\t\t\t\t\t\t<b class="error" :if="${t.totals("error",s)}">${t.totals("error",s)}</b>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<button onclick="tt.start_tests(${s})" :disabled="${1==t.running}">Run</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t${e.tests.map(((r,n)=>`\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<div class="tt_test ${ttb.print_if({fn:null!=r.fn,running:s==t.current_group&&n==t.current_test,skipped:r.skip,pause:r.pause,hidden:e.collapse})}" test_index="${n}" test_id="${r.id}" key="${n}">\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t<div :if="${"string"==typeof r.label}">\n\t\t\t\t\t\t\t\t\t\t\t<i :if="${t.display_test_index}">${n}</i> \n\t\t\t\t\t\t\t\t\t\t\t<input type="checkbox" :checked="${!r.skip}" onchange="tt.toggle_skip_test(${s}, ${n})" test_index="${n}">\n\t\t\t\t\t\t\t\t\t\t\t<p><b :if="${null!=r.fn&&!r.pause&&!r.wait}">Run:</b> ${r.label}</p>\n\t\t\t\t\t\t\t\t\t\t\t<div class="running_indicator" :if="${s==t.current_group&&n==t.current_test}"></div>\n\t\t\t\t\t\t\t\t\t\t\t<div :if="${null!=r.result}" class="result_container">\n\t\t\t\t\t\t\t\t\t\t\t\t<div class="tt_result ${r.result}">${r.result}</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class="tt_time" :if="${"skipped"!=r.result&&null!==r.time}">${r.time}ms</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<button onclick="tt.run_test(${s}, ${n}).then(tt.finish_tests)" :if="${!r.pause&&!r.wait}" :disabled="${1==t.running}">Run</button>\n\t\t\t\t\t\t\t\t\t\t\t<button onclick="tt.resume_tests()" :if="${n==t.current_test&&r.pause&&t.paused}">Resume</button>\n\t\t\t\t\t\t\t\t\t\t\t<button class="insert_pause" onclick="tt.insert_pause(${s}, ${n+1})" helptext="Insert pause here"><svg width="50" height="57" viewBox="0 0 50 57"><rect y="0.241699" width="20.339" height="55.7721" rx="5" fill="black"/><rect x="29.661" y="0.241699" width="20.339" height="55.7721" rx="5" fill="black"/></button>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t`)).join(" ")}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t`)).join(" ")}\n\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t\t<div class="tt_footer">\n\t\t\t\t\t\t<p>Testerrific v1.0</p>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<a href="https://projects.thomhines.com/testerrific/" target="_blank">Documentation</a>\n\t\t\t\t\t\t\t<a href="https://github.com/thomhines/testerrific" target="_blank">Github</a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t\n\t\t\t\n\t\t\t<button class="tt_toggle_tests_panel ${ttb.print_if({visible:t.visible})}" onclick="tt.toggle_tests_panel()">TESTS</button>\n\t\t\t\n\t\t\t</div>\n\t\t\t\n\t`}});document.addEventListener("DOMContentLoaded",(function(){let t=document.createElement("div");t.id="testerrific",document.body.appendChild(t),testerrific_ui.render(),tt=testerrific_ui.data,tt.skip_non_solo_tests()}),!1);
//# sourceMappingURL=testerrific.min.js.map