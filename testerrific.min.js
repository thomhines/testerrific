qt={collapse_skipped_groups:!0,groups:[],visible:!0,current_group:-1,running_group:-1,current_test:0,running:0,paused:0,run_start:0,run_time:0,is_manual_test:1,skip_manual_tests:0,dom_check_timeout:2e3,dom_check_interval:100,test_defaults:{running:0,time:null,result:null,skip:0,only:0,max_time:1e3,run_if:"",message:"",before:()=>{},after:()=>{}},test_group:function(t,e={}){qt.groups.push(Object.assign({group:!0,label:t,test_count:0,collapse:!1,tests:[],skip:0,only:0,run_if:"",beforeEach:()=>{},afterEach:()=>{}},e))},duplicate_group:function(t,e,s={}){let n=qt.find(qt.groups,{label:t}),r=qt.clone(n);return r=_.defaults(s,r),r.label=e,qt.groups.push(r),qt.groups.length-1},test:function(t,e,s={}){"object"!=typeof e&&e||(s=e,e=t,t=null);let n=Object.assign(qt.clone(qt.test_defaults),s,{test:e});!n.label&&t&&(n.label=t),n.label||"string"!=typeof e||(n.label=e);let r=qt.groups[qt.groups.length-1];"number"==typeof n.group?r=qt.groups[n.group]:n.group&&(r=qt.find(qt.groups,{label:n.group})),n.position?r.tests.splice(n.position,0,n):r.tests.push(n)},run:function(t,e,s={}){"object"!=typeof e&&e||(s=e,e=t,t=null),test_obj=_.defaults({fn:e},s,qt.test_defaults),!test_obj.label&&t&&(test_obj.label=t);let n=qt.groups[qt.groups.length-1];"number"==typeof test_obj.group?n=qt.groups[test_obj.group]:test_obj.group&&(n=qt.find(qt.groups,{label:test_obj.group})),test_obj.position?n.tests.splice(test_obj.position,0,test_obj):n.tests.push(test_obj)},wait:function(t){qt.run((()=>new Promise((function(e,s){setTimeout(e,t)}))))},pause:function(){qt.run((function(){qt.alert("Tests paused."),qt.pause_tests()}))},manual_test:function(t="",e="",s={}){"object"!=typeof e&&e||(s=e,e=t),test_obj=_.defaults({label:t,test:"false",max_time:999999,message:e,is_manual_test:1},s,qt.test_defaults),qt.test(t,test_obj)},disable_skipped_tests:function(){let t=0;qt.groups.forEach((function(e){e.tests.forEach((function(s){(e.only||s.only)&&(t=1)}))})),qt.groups.forEach((function(e){let s=0,n=0;e.tests.forEach((function(r){e.skip&&(r.skip=1),r.only&&(n=1),!t||e.only||r.only||(r.skip=1),qt.skip_manual_tests&&(e.is_manual_test||r.is_manual_test)?r.skip=1:n&&(s=1)})),t&&!e.only&&(e.skip=1),qt.skip_manual_tests&&e.is_manual_test&&(e.skip=1),s&&(e.skip=0)}))},start_tests:function(t=-1){qt.groups.forEach((function(t){t.result=null,t.time=null,t.tests.forEach((function(t){t.time=null}))})),qt.running_group=t,qt.running_group>=0?(qt.current_group=qt.running_group,qt.groups[qt.current_group].tests.forEach((t=>{t.result=null}))):(qt.current_group=0,qt.groups.forEach((t=>{t.tests.forEach((e=>{t.result=null,e.result=null}))}))),qt.current_test=0,qt.running=1,qt.run_start=new Date,qt.run_time=null,qt.paused=0,qt.current_test,clearTimeout(qt.dom_check_interval_obj),qt.run_next_test()},pause_tests:function(){qt.paused=1},resume_tests:function(){qt.paused=0,qt.alert(""),qt.run_next_test()},test_start:null,dom_check_interval_obj:null,run_test:function(t,e){return new Promise((function(s,n){qt.current_group=t,qt.current_test=e;let r=qt.groups[qt.current_group],o=qt.groups[t].tests[e];o.result=null,o.time=null,o.is_manual_test?qt.is_manual_test=1:qt.is_manual_test=0,beforeEach_result=r.beforeEach(),Promise.resolve(beforeEach_result).then((function(t){before_result=o.before(),Promise.resolve(before_result).then((function(t){o.message&&qt.alert(o.message),qt.run_test_loop(qt.current_group,qt.current_test).then((function(){o.message&&qt.alert(""),after_result=o.after(),Promise.resolve(after_result).then((function(t){afterEach_result=r.afterEach(),Promise.resolve(afterEach_result).then((function(t){s()}))}))}))}))}))}))},run_test_loop:function(group_index,test_index,delay=0){return new Promise((function(resolve,reject){qt.dom_check_interval_obj=setTimeout((function(){let _group=qt.groups[qt.current_group],_test=qt.groups[qt.current_group].tests[qt.current_test];if(qt.run_start&&(qt.run_time=(new Date).getTime()-qt.run_start.getTime()),0==delay&&(qt.test_start=new Date),_test.wait_for_element&&new Date-qt.test_start>qt.dom_check_timeout)return _test.result="error",_test.error="element not found",_test.time=(new Date).getTime()-qt.test_start.getTime(),void resolve();if(_test.wait_for_element&&(!$(_test.wait_for_element).is(":visible")||$(_test.wait_for_element).css("opacity")<1))qt.run_test_loop(group_index,test_index,qt.dom_check_interval).then((function(){qt.running||(qt.current_test=0),resolve()}));else if(_test.fn)result=_test.fn(),Promise.resolve(result).then((function(t){_test.time=(new Date).getTime()-qt.test_start.getTime(),resolve()}));else{let result;if(_test.result)return _test.time=(new Date).getTime()-qt.test_start.getTime(),void resolve();try{if("function"==typeof _test.test){let t=_test.test();if(t instanceof Promise)return console.log("has promise"),void Promise.resolve(t).then((function(t){console.log("run_test_loop resolved"),_test.result=t?"passed":"failed",_test.time=(new Date).getTime()-qt.test_start.getTime(),resolve()}));result=t}else result=eval(_test.test)}catch(t){result=!1}if(!result&&_test.max_time)return void((new Date).getTime()-qt.test_start.getTime()>=_test.max_time?(_test.result="failed",_test.error="timed out",_test.time=(new Date).getTime()-qt.test_start.getTime(),resolve()):qt.run_test_loop(group_index,test_index,qt.dom_check_interval).then((function(){qt.running||(qt.current_test=0),resolve()})));_test.result=result?"passed":"failed",_test.time=(new Date).getTime()-qt.test_start.getTime(),qt.running||(qt.current_test=0),resolve()}}),delay)}))},pass_test:function(t=qt.current_group,e=qt.current_test){qt.is_manual_test=0,qt.groups[t].tests[e].result="passed"},fail_test:function(t=qt.current_group,e=qt.current_test){qt.is_manual_test=0,qt.groups[t].tests[e].result="failed"},skip_test:function(t=qt.current_group,e=qt.current_test){qt.is_manual_test=0,qt.groups[t].tests[e].result="skipped"},run_next_test:function(){if(qt.paused)return;let _group=qt.groups[qt.current_group];if(qt.current_group>=qt.groups.length||qt.running_group>=0&&qt.current_group!=qt.running_group)return void qt.finish_tests();let _test=qt.groups[qt.current_group].tests[qt.current_test];return qt.current_test>=_group.tests.length?(Vue.set(qt,"current_group",qt.current_group+1),Vue.set(qt,"current_test",0),void qt.run_next_test()):_test.skip||_test.run_if&&0==eval(_test.run_if)?(_test.result="skipped",Vue.set(qt,"current_test",qt.current_test+1),void qt.run_next_test()):void qt.run_test(qt.current_group,qt.current_test).then((function(){Vue.set(qt,"current_test",qt.current_test+1),qt.run_next_test()}))},finish_tests:function(){qt.current_group=-1,qt.current_test=0,qt.run_start=0,qt.running=0,qt.alert("Tests Complete",3e3)},alert_timeout:null,alert:function(t,e=999999){$(".tests_message span").html()!=t&&(clearTimeout(qt.alert_timeout),t?$(".tests_message span").html(t).parent().addClass("visible"):$(".tests_message span").html("").parent().removeClass("visible"),qt.alert_timeout=setTimeout((function(){qt.alert("")}),e))},find(t,e){for(var s=-1,n=0;n<t.length&&!(s>=0);n++){let r=1;for(prop in e)t[n][prop]!=e[prop]&&(r=0);r&&(s=n)}return t[s]},clone:t=>JSON.parse(JSON.stringify(t)),toggle_tests_panel(){qt.visible=!qt.visible},enable_groups(){qt.groups.forEach((t=>{t.tests.forEach((e=>{t.skip=0,e.skip=0}))}))},disable_groups(){qt.groups.forEach((t=>{t.tests.forEach((e=>{t.skip=1,e.skip=1}))}))},collapse_groups(){qt.groups.forEach((t=>{t.collapse=1}))},expand_groups(){qt.groups.forEach((t=>{t.collapse=0}))},toggle_view_group(t){qt.groups[t].collapse=!qt.groups[t].collapse},toggle_skip_group(t){let e=$(t.target).closest(".group").attr("group_index"),s=$(t.target).prop("checked");qt.groups[e].skip=!s,qt.groups[e].tests.forEach((function(t){t.skip=!s}))},toggle_skip_test(t){let e=$(t.target).closest(".group").attr("group_index"),s=$(t.target).closest(".test").attr("test_index"),n=$(t.target).prop("checked");qt.groups[e].tests[s].skip=!n},totals(t="all",e=-1){let s={all:0,run:0},n=qt.groups;return e>=0&&(n=[qt.groups[e]]),n.forEach((function(t){t.tests.forEach((function(t){t.test&&(s[t.result]||(s[t.result]=0),t.group||null==t.result||s[t.result]++,null!=t.result&&s.run++,s.all++)}))})),s[t]?s[t]:0},ms_to_s:t=>(t/1e3).toFixed(1),asdf:{a:1,b:2,c:{d:1,e:2,f:3}},df:[5,3,1,6,35,7]},qt.test_group("Group A"),qt.test("a == 1"),qt.test("a == 2"),qt.test("a == 3"),qt.test_group("Group B"),qt.test("a == 1"),qt.test("a == 2"),qt.test("a == 3");var debounceRender=function(t){t.debounce&&window.cancelAnimationFrame(t.debounce),t.debounce=window.requestAnimationFrame((function(){t.render()}))},handler=function(t){return{get:function(e,s){return["[object Object]","[object Array]"].indexOf(Object.prototype.toString.call(e[s]))>-1?new Proxy(e[s],handler(t)):e[s]},set:function(e,s,n){return e[s]=n,debounceRender(t),!0},deleteProperty:function(e,s){return delete e[s],debounceRender(t),!0}}},Rue=function(t){var e=this;e.elem=document.querySelector(t.selector);var s=new Proxy(t.data,handler(this));e.template=t.template,e.debounce=null,Object.defineProperty(this,"data",{get:function(){return s},set:function(t){return s=new Proxy(t,handler(e)),debounce(e),!0}})};Rue.prototype.render=function(){let t=document.createElement("div");t.innerHTML=this.template(this.data),$(t).find("[\\:if]").each((function(){seval($(this).attr(":if"))?$(this).removeAttr(":if"):$(this).remove()})),this.elem.innerHTML=t.innerHTML},print_if=function(t){let e="";for(let s in t)try{seval(t[s])&&(e+=s+" ")}catch(t){console.log("print_if error",e,check)}return e.trim()},seval=function(str){try{return eval(str)}catch(t){console.log("eval error",str)}};var app=new Rue({selector:"#testerrific",data:qt,template:function(t){return`\n\t\t\n\t\t\t\n\t\t\t<div class="tests_ui ${print_if({visible:t.visible})}">\n\t\t\t\t\n\t\t\t\t<div class="tests_message">\n\t\t\t\t\t<span></span>\n\t\t\t\t\t<div class="pass_fail_buttonss" :if="qt.is_manual_test">\n\t\t\t\t\t\t<button class="pass" onclick="qt.pass_test()">Pass</button>\n\t\t\t\t\t\t<button class="fail" onclick="qt.fail_test()">Fail</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<button :if="qt.running && qt.paused" onclick="qt.resume_tests()">▶ &nbsp;Resume</button>\n\t\t\t\t\t<button class="close" onclick="qt.alert('')"><i class="icon-close"><span>cancel</span></i></button>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t<div class="panel_inner_container">\n\t\t\t\t\t\n\t\t\t\t\t<h2>Tests</h2>\n\t\t\t\t\t\n\t\t\t\t\t<div class="run_all_tests_container">\n\t\t\t\t\t\t<div :if="!qt.running">\n\t\t\t\t\t\t\t<button onclick="qt.start_tests()"> ▶ &nbsp;Run selected tests</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div :if="qt.running && !qt.paused">\n\t\t\t\t\t\t\t<button onclick="qt.pause_tests()"><span style="font-size: .7em; border-left: 4px solid #000; border-right: 4px solid #000; line-height: 1.3em;">&nbsp;</span> &nbsp;Pause</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div :if="qt.running && qt.paused">\n\t\t\t\t\t\t\t<button onclick="qt.resume_tests()">▶ &nbsp;Resume</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div :if="qt.running">\n\t\t\t\t\t\t\t<button onclick="qt.skip_test()"><span style="font-size: 1.5em; line-height: .3em;">»</span> &nbsp;Skip</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t\t<br>\n\t\t\t\t\t\n\t\t\t\t\t<transition name="fade">\n\t\t\t\t\t\t<div class="tests_summary" :if="qt.running || (qt.totals('run') && qt.totals('run') != qt.totals('skipped'))">\n\t\t\t\t\t\t\t<h3>Summary:</h3>\n\t\t\t\t\t\t\t<div class="tests_summary_table">\n\t\t\t\t\t\t\t\t<div :if="qt.totals('run')"><b class="run" :text="qt.totals('run')">${t.totals("run")}</b></div><div :if="qt.totals('run')"> tests run</div>\n\t\t\t\t\t\t\t\t<div :if="qt.totals('passed')"><b class="passed" :text="qt.totals('passed')">${t.totals("passed")}</b></div><div :if="qt.totals('passed')"> passed</div>\n\t\t\t\t\t\t\t\t<div :if="qt.totals('failed')"><b class="failed" :text="qt.totals('failed')">${t.totals("failed")}</b></div><div :if="qt.totals('failed')"> failed</div>\n\t\t\t\t\t\t\t\t<div :if="qt.totals('skipped')"><b class="skipped" :text="qt.totals('skipped')">${t.totals("skipped")}</b></div><div :if="qt.totals('skipped')"> skipped</div>\n\t\t\t\t\t\t\t\t<div :if="qt.totals('error')"><b class="error" :text="qt.totals('error')">${t.totals("error")}</b></div><div :if="qt.totals('error')"> errors</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t\t\t\t<br>\n\t\t\t\t\t\n\t\t\t\t\t\t\t<div :if="qt.run_time">Total time: <b>${t.ms_to_s(t.run_time)}</b> sec</div>\n\t\t\t\t\t\t\t<div :if="!qt.run_time && qt.paused">Paused...</div>\n\t\t\t\t\t\t\t<div :if="!qt.run_time && !qt.paused">Running...</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</transition>\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t<div class="tests_table">\n\t\t\t\t\t\t<div class="table_controls">\n\t\t\t\t\t\t\t<a onclick="enable_groups">enable all</a>\n\t\t\t\t\t\t\t<a onclick="disable_groups">disable all</a>\n\t\t\t\t\t\t\t<div>|</div>\n\t\t\t\t\t\t\t<a onclick="expand_groups">expand all</a>\n\t\t\t\t\t\t\t<a onclick="collapse_groups">collapse all</a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</div>\n\t\t\t\n\t\t\t\n\t\t\t<button class="toggle_tests_panel ${print_if({visible:t.visible})}" onclick="qt.toggle_tests_panel()">Tests</button>\n\t\t\n\t\t\t<h1 class="${print_if({test:"qt.running"})}">running: ${t.running}</h1>\n\t\t\t<p>${print_if({test:"qt.running"})}</p>\n\t\t\t<p>${t.asdf.a}</p>\n\t\t\t<ul>\n\t\t\t\t${t.groups.map((function(e){return`<li>\n\t\t\t\t\t\n\t\t\t\t\t${e.label}\n\t\t\t\t\t${e.tests.map((function(e){return`<br>${t.run_time} <span>${e.test} - ${e.results}</span>`}))}\n\t\t\t\t\t</li>`})).join("")}\n\t\t\t</ul>\n\t\t\t\n\t`}});app.render(),qt=app.data,jQuery((function(t){}));
//# sourceMappingURL=testerrific.min.js.map